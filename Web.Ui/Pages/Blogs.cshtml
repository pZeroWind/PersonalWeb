@page
@model BlogsModel
@{
    ViewData["Title"] = "博客列表";
    ViewData["Route"] = "blogs";
}

@section CSS{
    <link rel="stylesheet" href="~/css/blogpage.css" />
    <link rel="stylesheet" href="~/css/components/search.css" />
    <link rel="stylesheet" href="~/css/components/blog_component.css" />
}

<div class="page blog-page">
    @Html.AntiForgeryToken()
        <form class="search" action="/blogs" method="get" style="width: auto;">
            <input value="@Model.ViewModel.Search" class="search-input" type="text" onchange="changeSearchTitle(value)" />
            <button type="submit" class="search-btn" onclick="reloadPage();return false;">站内搜索</button>
        </form>
    <div class="blog-list" id="blogs-blog-list">
        @await Html.PartialAsync("_BlogsView", Model.ViewModel)
    </div>
</div>

@section Scripts{
    <script>
        let model = @Html.Raw(Json.Serialize(Model.ViewModel));

        let tempSearch = model.search;

        function changeSearchTitle(val){
            tempSearch = val;
        }

        function reloadPage() {
            model.search = tempSearch;
            fetch('@Url.Page("Blogs", "Reload")', GetPostData(JSON.stringify(model)))
            .then(response => response.text())
            .then(html => {
                    document.getElementById("blogs-blog-list").innerHTML = html;
                    if (!model.search) model.search = "";
                    history.pushState(null, '', `?page=${model.pageIndex}&search=${model.search}`);
            });
        }

        function prevPage(){
            fetch('@Url.Page("Blogs", "PrevPageIndex")', GetPostData(JSON.stringify(model)))
            .then(response => response.text())
            .then(html => {
                    document.getElementById("blogs-blog-list").innerHTML = html;
                    model.pageIndex--;
                    if (!model.search) model.search = "";
                    history.pushState(null, '', `?page=${model.pageIndex}&search=${model.search}`);
            });
        }

        function nextPage(){
            fetch('@Url.Page("Blogs", "NextPageIndex")', GetPostData(JSON.stringify(model)))
            .then(response => response.text())
            .then(html => {
                    document.getElementById("blogs-blog-list").innerHTML = html;
                    model.pageIndex++;
                    if (!model.search) model.search = "";
                    history.pushState(null, '', `?page=${model.pageIndex}&search=${model.search}`);
            });
        }
    </script>
}
