@page
@model BlogsModel
@{
    ViewData["Title"] = "博客列表";
    ViewData["Route"] = "blogs";
}
<div class="page">
        <div class="search">
            @Html.AntiForgeryToken()
            <input value="@Model.ViewModel.Search" class="search-input" type="text" onchange="changeSearchTitle(value)" />
            <button class="search-btn" onclick="reloadPage()">站内搜索</button>
        </div>
    <div class="blog-list" id="blogs-blog-list">
        @await Html.PartialAsync("_BlogsView", Model.ViewModel)
    </div>
</div>

@section Scripts{
    <script>
        let model = @Html.Raw(Json.Serialize(Model.ViewModel));

        let tempSearch = model.search;

        function changeSearchTitle(val){
            tempSearch = val;
        }

        function postData() {
            return {
                method: "POST",
                headers: {
                    'RequestVerificationToken': document.querySelector('input[type="hidden"][name="__RequestVerificationToken"]').value,
                    'content-type': 'application/json'
                },
                body: JSON.stringify(model)
            }
        }

        function reloadPage() {
            model.search = tempSearch;
            fetch('@Url.Page("Blogs", "Reload")', postData())
            .then(response => response.text())
            .then(html => {
                    document.getElementById("blogs-blog-list").innerHTML = html;
                    if (!model.search) model.search = "";
                    history.pushState(null, '', `?page=${model.pageIndex}&search=${model.search}`);
            });
        }

        function prevPage(){
            fetch('@Url.Page("Blogs", "PrevPageIndex")', postData())
            .then(response => response.text())
            .then(html => {
                    document.getElementById("blogs-blog-list").innerHTML = html;
                    model.pageIndex--;
                    if (!model.search) model.search = "";
                    history.pushState(null, '', `?page=${model.pageIndex}&search=${model.search}`);
            });
        }

        function nextPage(){
            fetch('@Url.Page("Blogs", "NextPageIndex")', postData())
            .then(response => response.text())
            .then(html => {
                    document.getElementById("blogs-blog-list").innerHTML = html;
                    model.pageIndex++;
                    if (!model.search) model.search = "";
                    history.pushState(null, '', `?page=${model.pageIndex}&search=${model.search}`);
            });
        }
    </script>
}
